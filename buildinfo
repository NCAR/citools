#!/bin/sh
PROG="buildinfo"
DESC="Collect container build information"
USAGE1="${PROG}"
USAGE2="${PROG} -h|--help"
BUILDINFO=/etc/buildinfo
SCRIPTDIR=`cd \`dirname $0\`; pwd`

case $1 in
    -h|--help)
        cat <<EOF
NAME
    $PROG - $DESC

SYNOPSIS
    $USAGE

DESCRIPTION
    Print a list of \"official\" installed software, including the output
    of \"uname -mvr\", the distro version, and all packages reported by the
    package manager.

    This is best run from a Dockerfile after all software has been installed
    for an image.

FILES
    ${BUILDINFO}/kernel_release
    ${BUILDINFO}/kernel_version
    ${BUILDINFO}/machine
    ${BUILDINFO}/distro
    ${BUILDINFO}/distro_release
    ${BUILDINFO}/package_manager
    ${BUILDINFO}/packages
        Information is stored in these files. Names are self-explanatory.
EOF
        exit 0 ;;
    -*)
        echo "${PROG}: unknown option: $1" >&2
        exit 1 ;;

    '')
        : ;;
    *)
        BASE="$1" ;;
esac
container_id=`sed -n -e '2,$d' -e 's/.*:.docker.\(.*\)/\1/p' /proc/self/cgroup 2>/dev/null`
if [ ":$container_id" = ":" ] ; then
    echo "$PROG: Must be run in a docker container" >&2
    exit 1
fi

if [ ! -d ${BUILDINFO} ] ; then
    mkdir ${BUILDINFO} || exit 1
fi

uname -r >${BUILDINFO}/kernel_release
uname -v >${BUILDINFO}/kernel_version
uname -m >${BUILDINFO}/machine

cd /etc || exit 1
KNOWN_RELEASEFILES="
  alpine-release
  centos-release
  fedora-release
  oracle-release
  debian_version
"

RELEASE_FILE=
RELEASE=
DISTRO=
if [ -f /etc/os-release ] ; then
    . /etc/os-release
    DISTRO="${NAME}"
fi
for releasefile in ${KNOWN_RELEASEFILES} ; do
    if [ -f ${releasefile} ] ; then
        read RELEASE <${releasefile}
        RELEASE_FILE=${releasefile}
        if [ ":$DISTRO" = ":" ] ; then
            DISTRO=`echo $RELEASE_FILE | sed -n 's/^\([a-zA-Z0-9]*\).*/\1/p'`
        fi
        break
    fi
done
if [ ":$RELEASE" = ":" ] ; then
    echo "$PROG: Cannot determine linux distribution type!" >&2
    exit 1
fi
echo $DISTRO >${BUILDINFO}/distro
echo $RELEASE >${BUILDINFO}/distro_release

exec >${BUILDINFO}/packages

case $RELEASE_FILE in
    alpine-release)
        echo "apk" >${BUILD_INFO}/package_manager
        apk info -vv 2>&1 | sed -e 's/ - .*//' | sort | \
            grep -v 'WARNING: ' | while read pkgvers ; do
                pkg=`echo "$pkgvers" | sed 's/-[0-9].*//'`
                vers=`echo "$pkgvers" | sed "s/^${pkg}-\([0-9].*\)/\1/"`
                echo "$pkg $vers"
            done ;;
        
    centos-release|fedora-release|oracle-release)
        echo "rpm" >${BUILD_INFO}/package_manager
        rpm -qa | sort | sed "s/^/$cmd: /" | while read rpm pkgvers ; do
            pkg=`echo "$pkgvers" | sed 's/-[0-9].*//'`
            vers=`echo "$pkgvers" | sed "s/^${pkg}-\([0-9].*\)/\1/"`
            echo "$pkg $vers"
        done ;;

    debian_version)
        echo "dpkg" >${BUILD_INFO}/package_manager
        dpkg-query -W | tr '\t' ' ' ;;

esac

exit 0
