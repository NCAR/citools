#!/bin/sh
PROG="cicada-log-read"
DESC="Read from a CICADA log"
USAGE1="${PROG} [--project=<project>] --deploy-env=<deploy_env>
               [--type=approved|deployed] [--image-tag=<image_tag>]"

HELP_DESC="
This script reads log messages from the CICADA GitHub repo.

Every log message is associated with a project (target repo), an image tag,
a type, and a deployment environment. The start of every log entry has a
distinct format that allows the logs to be searched unambiguously.
"
HELP_OPTS="
--deploy-env=<deploy_env>
    The deployment environment (required).

--image-tag=<image_tag>
    If given, only log entries with a matching image tag are shown.

--project=<project>
    The project (GitHub repo) that is the subject of the log entry. If not
    set, the CIRCLE_PROJECT_REPONAME environment variable is checked for a
    default value.

--type=approved|deployed
    If given, only log entries with a matching type are shown.
"

TYPE_CLAUSE="[a-z][ a-z]* to"
IMAGE_TAG_RE="[.0-9]*-[.0-9]*Z[-.0-9a-zA-Z]*"
IMAGE_TAG="${IMAGE_TAG_WILDCARD}"

SCRIPTDIR=`cd \`dirname $0\`; pwd`
. ${SCRIPTDIR}/cicada-log-setup.rc || exit 1

if [ ! -f "${LOGFILE}" ] ; then
    exit 0
fi

#
# Define the variables referenced in $LOGRECORD_FORMAT as regex patterns
#
PROJECT='[^:]*'
if [ ":${IMAGE_TAG}" != ":${IMAGE_TAG_RE}" ] ; then
    IMAGE_TAG=`echo "${IMAGE_TAG}" | sed -e 's/\./[.]/g'`
fi
DEPLOY_ENV=".*"
LOGDETAIL=
eval PATTERN="\"${LOGRECORD_FORMAT}\""
vecho "PATTERN=${PATTERN}"
grep "^[^ ]*${PATTERN}" ${LOGFILE}

. cicada-log-cleanup.rc
exit 0

