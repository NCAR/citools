#!/bin/sh
PROG=circle-env
DESC="Define circle-related env variables or verify they are set"
USAGE1="${PROG} env_file"
USAGE2="${PROG}"

DEFAULT_CDIMPL="cicada"
DEFAULT_REGISTRY_PREFIX="ncar"

HELP_DESC="
This script either writes environment variable definitions to a given file
for various CircleCI/citools variables, or verifies that the same variables
are defined in the environment.

If a file argument is given on the command line, the script will write
environment variable definitions to the file. The file can subsequently
be sourced (from a Bourne-ish shell) to actually set the environment
variables.

Without the filename argument, the script verifies that the variables
are defined and returns 1 if any are not. It is meant to be run from
circle-* scripts.
"
HELP_ENV="
When writing variable definitions, the following environment variables can
be predefined; their values will be propagated through if set, and
initialized otherwise:

CDIMPL
    The name of the \"deployment service\" to use. Default is
    \"${DEFAULT_CDIMPL}\". This name must correspond to a script in the
    \$LOCAL_BIN directory. See CDIMPL-README.md.

LOCAL_BIN
    The directory where additional software should be defined for use by
    CircleCI jobs.

STATEDIR
    A workspace subdirectory in which state information can be stored
    for sharing among jobs.

WORKSPACE
    The absolute path or path relative to \$CIRCLE_WORKING_DIRECTORY of the
    CircleCI workspace root directory for the current workflow.

When writing variable definitions, the following environment variables will
always be defined from scratch:

CIRCLE_TAG_IS_SEMVER
    \"true\" if the CIRCLE_TAG environment variable is set and is a valid
    semantic version string, \"false\" otherwise.

CIRCLE_TAG_NUM
    If CIRCLE_TAG environment variable is set and is a valid semantic
    version string, the numeric (major.minor.patch) portion of the tag.

CIRCLE_TAG_PRERELEASE
    If CIRCLE_TAG environment variable is set and is a valid semantic
    version string with a prerelease component, the prerelease portion of
    the tag (with its leading \"-\").

CIRCLE_TAG_META
    If CIRCLE_TAG environment variable is set and is a valid semantic
    version string with a metadata component, the metadata portion of
    the tag (with its leading \"+\").

CITOOLS_CIRCLE_ENV
    Always set to "true" by this script.

INIT_RC
    The name of the file the script writes to. This file should be sourced
    at the start of CircleCI \"run\" job steps to set environment
    variables. The INIT_RC variable can be used by job steps that need to
    modify the environment for subsequent job steps. When writing variable
    definitions, if this is pre-defined and does not match the file name
    given on the command line, the script will abort.
"
SAVED_PATH="${PATH}"
SCRIPTDIR=`cd \`dirname $0\`; pwd`
. ${SCRIPTDIR}/citools-basics.rc || exit 1

if [ ":$1" != ":" ] ; then
    MODE=write
    init_rc=`cd \`dirname $1\`; pwd`/`basename $1`
    if [ ":${INIT_RC}" != ":" ] ; then
        INIT_RC=`cd \`dirname ${INIT_RC}\`; pwd`/`basename ${INIT_RC}`
        if [ ":${init_rc}" != ":${INIT_RC}" ] ; then
            echo "${PROG}: INIT_RC variable does not match ${init_rc}" >&2
            exit 1
        fi
    fi
    INIT_RC="${init_rc}"
else
    MODE=check
fi

VARS="
 CDIMPL
 LOCAL_BIN
 STATEDIR
 WORKSPACE
 INIT_RC
 CIRCLE_TAG_IS_SEMVER
 CITOOLS_CIRCLE_ENV
"
SEMVER_VARS="
 CIRCLE_TAG_NUM
 CIRCLE_TAG_PRERELEASE
 CIRCLE_TAG_META
"

if [ $MODE = check ] ; then
    if [ ":${CIRCLE_TAG_IS_SEMVER}" = ":true" ] ; then
       VARS="${VARS}${SEMVER_VARS}"
    fi
    init_err=n
    for var in ${VARS} ; do
        eval val=\"\$${var}\"
        if [ ":$val" = ":" ] ; then
            echo "${PROG}: variable $var is not set" >&2
            init_err=y
        fi
    done
    if [ $init_err = y ] ; then
        exit 1
    fi
    exit 0
fi
CITOOLS_CIRCLE_ENV=true

if [ ":${WORKSPACE}" = ":" ] ; then
    WORKSPACE=`dirname ${SCRIPTDIR}`
fi

STATEDIR="${STATEDIR:-${WORKSPACE}/state}"
LOCAL_BIN="${LOCAL_BIN:=${SCRIPTDIR}}"

CDIMPL="${CDIMPL:-${DEFAULT_CDIMPL}}"
if [ ! -x "${SCRIPTDIR}/${CDIMPL}" ] ; then
    echo "${PROG}: ${CDIMPL} is not a known deployment service" >&2
    exit 1
fi

CIRCLE_TAG_IS_SEMVER=false
if [ ":${CIRCLE_TAG}" != ":" ] ; then
    CIRCLE_TAG_NUM=`parse-semver -n ${CIRCLE_TAG}`
    CIRCLE_TAG_PRERELEASE=`parse-semver -p ${CIRCLE_TAG}`
    CIRCLE_TAG_META=`parse-semver -m ${CIRCLE_TAG}`
    if [ ":${CIRCLE_TAG_NUM}" != ":" ] ; then
        CIRCLE_TAG_IS_SEMVER=true
    fi
fi
PATH="${SCRIPTDIR}:${SAVED_PATH}"
for var in PATH ${VARS} ; do
    eval val=\"\$${var}\"
    echo "$var=\"${val}\" export $var"
done >"${INIT_RC}"
