#!/bin/sh
PROG=circle-sim
DESC="Simulate a CircleCI build environment by setting env variables"
USAGE1="${PROG} <command> ..."

HELP_DESC="
This script simulates a CircleCI build environment by setting environment
variable that CircleCI would normally set before running the indicated
command. It will not set CIRCLE_TAG, and CIRCLE_BRANCH will be set to
\"master\" by default, but if CIRCLE_TAG and CIRCLE_BRANCH are already in
the environment when this script is invoked, the existing values will be
passed on.
"

SCRIPTDIR=`cd \`dirname $0\`; pwd`
. ${SCRIPTDIR}/citools-basics.rc || exit 1

REPO_URL=`git remote get-url origin`
REPO=`echo ${REPO_URL} |
 sed -e 's/\.[a-z]*$//' \
     -e 's:.*/\([^/][^/]*/[^/][^/]*\)$:\1:' \
     -e 's/.*://'`
if [ ":${REPO}" = ":" ] ; then
    echo "${PROG}: unable to determine remote git repo" >&2
    exit 1
fi


CI=true
CIRCLECI=true
CIRCLE_BRANCH="${CIRCLE_BRANCH:-master}"
CIRCLE_BUILD_NUM=2
CIRCLE_BUILD_URL=https://circleci.com/gh/${REPO}/2
CIRCLE_COMPARE_URL=
CIRCLE_JOB="${CIRCLE_BUILD:-build}"
CIRCLE_NODE_INDEX=0
CIRCLE_NODE_TOTAL=1
CIRCLE_PREVIOUS_BUILD_NUM=1
CIRCLE_PROJECT_REPONAME=`expr "${REPO}" : '[^/][^/]*/\(.*\)$'`
CIRCLE_PROJECT_USERNAME=`expr "${REPO}" : '\([^/][^/]*\)/.*'`
CIRCLE_REPOSITORY_URL="${REPO_URL}"
CIRCLE_SHA1=`git rev-list --max-count 1 HEAD`
CIRCLE_USERNAME=`${SCRIPTDIR}/github-get /user | jq -r '.login'`
CIRCLE_WORKFLOW_ID=d131a9a6-584a-432f-bde0-cd9e6799d901
CIRCLE_WORKING_DIRECTORY=`pwd`

export CI CIRCLECI CIRCLE_BRANCH CIRCLE_BUILD_NUM CIRCLE_BUILD_URL \
       CIRCLE_COMPARE_URL CIRCLE_JOB CIRCLE_NODE_INDEX CIRCLE_NODE_TOTAL \
       CIRCLE_PREVIOUS_BUILD_NUM CIRCLE_PROJECT_REPONAME \
       CIRCLE_PROJECT_USERNAME CIRCLE_REPOSITORY_URL CIRCLE_SHA1 \
       CIRCLE_USERNAME CIRCLE_WORKFLOW_ID 

if [ $# = 0 ] ; then
    set printenv
fi
exec "$@"

