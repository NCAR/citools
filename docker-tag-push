#!/bin/sh
PROG=docker-tag-push
DESC="Tag and push a docker image"
USAGE1="${PROG} local_image remote_image [tags...]"

HELP_DESC="
This script is a front-end for \"docker tag\" and \"docker push\".

To tag and push, the script requires at least two arguments: a local image
name and a remote image name. If no tags are specified on the command line,
the local image name should include a tag; this will be applied to the
remote image. If the remote image should be pushed to a registry other
than dockerhub, the remote image name should start with the registry name.

This script uses the docker-get-login if necessary to retrieve a command
for logging in to the remote registry.
"
SCRIPTDIR=`cd \`dirname $0\`; pwd`
. ${SCRIPTDIR}/citools-basics.rc || exit 1

LOCAL_IMAGE="$1"
if [ ":${LOCAL_IMAGE}" = ":" ] ; then
    echo "${PROG}: local image name is required" >&2
    exit 1
fi
shift
REMOTE_IMAGE="$1"
if [ ":${REMOTE_IMAGE}" = ":" ] ; then
    echo "${PROG}: remote image name is required" >&2
    exit 1
fi
shift
remote_tag=`expr "${REMOTE_IMAGE}" : '.*:\([^:][^:]*\)$'`
if [ ":${remote_tag}" != ":" ] ; then
    TAGS="$@ ${remote_tag}"
    REMOTE_IMAGE=`expr "${REMOTE_IMAGE}" : '\(.*\):[^:][^:]*$'`
fi

LOCAL_IMAGE_TAG=`expr "${LOCAL_IMAGE}" : '.*:\(.*\)$'`
if [ ":${LOCAL_IMAGE_TAG}" != ":" ] ; then
    TAGS="$@ ${LOCAL_IMAGE_TAG}"
fi
TAGS=`echo "${TAGS}" | sort -u`
if [ ":${TAGS}" = ":" ] ; then
    echo "${PROG}: no tags" >&2
    exit 1
fi

for tag in ${TAGS} ; do
    docker tag "${LOCAL_IMAGE}" "${REMOTE_IMAGE}:${tag}" || exit 1
done

docker logout
eval `docker-get-login "${REMOTE_IMAGE}"` || exit 1

docker push "${REMOTE_IMAGE}" || exit 1

exit 0



