#!/bin/sh
PROG="github-get"
DESC="Submit a GET request to the GitHub API"
USAGE1="${PROG} path"
HELP_DESC="
Submit a GET request to the GitHub API.

If the HTTP response status is 404, a \"Not found\" message is emitted and 1
is returned. If the HTTP response status is another non-200 status, the
entire response header and body are written to standard error and 1 is
returned. If the HTTP response status is 200, the response header is
discarded, the body is written to standard output, and 0 is returned.

The \"path\" argument is 
"
HELP_ARGS="
path
    The target URL without the leading \"scheme\" (e.g.,\"/user/repos\").
"
HELP_ENV="
GITHUB_URL
   The base URL that the command-line argument will be appended to.
   If not given, "https://api.github.com" is used.

GH_TOKEN
   A GitHub Personal API Token that will be used to authenticate.
"
SCRIPTDIR=`cd \`dirname $0\`; pwd`
. ${SCRIPTDIR}/citools-basics.rc || exit 1

GITHUB_URL="${GITHUB_URL:-https://api.github.com}"

case $1 in
    /*)
        URL_PATH="$@" ;;
    *)
        URL_PATH="/$@" ;;
esac
URL="${GITHUB_URL}${URL_PATH}"

vecho "Requesting GET from URL ${URL}..."
response=`curl -is -L \
     -H "Accept: application/vnd.github.v3+json" \
     -H "Authorization: token ${GH_TOKEN}" \
     "${URL}"`

statusline=`echo "${response}" | head -1`
case $statusline in
    *404*)
        # This must be a non-release tag.
        echo "${PROG}: Not found ($URL_PATH)" >&2
        exit 1 ;;
    *2[0-9][0-9]*)
        # If the request succeeded, strip out the HTTP response header and
        # output the body
        echo "${response}" | sed -n -e '/^[[{].*/,$p' ;;
    *)
        echo "${PROG}: api GET request failed" >&2
        echo "${response}" >&2
        exit 1 ;;
esac

exit 0
